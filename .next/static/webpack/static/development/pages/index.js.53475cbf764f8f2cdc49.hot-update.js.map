{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.53475cbf764f8f2cdc49.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["\r\nimport { Form, Icon, Input, Button, Checkbox } from 'antd';\r\nimport student from './student';\r\n\r\nclass NormalLoginForm extends React.Component {\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                console.log('Received values of form: ', values);\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n                <Form.Item>\r\n                    {getFieldDecorator('username', {\r\n                        rules: [{ required: true, message: 'Please input your username!' }],\r\n                    })(\r\n                        <Input\r\n                            prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                            placeholder=\"Username\"\r\n                        />,\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    {getFieldDecorator('password', {\r\n                        rules: [{ required: true, message: 'Please input your Password!' }],\r\n                    })(\r\n                        <Input\r\n                            prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                        />,\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    {getFieldDecorator('remember', {\r\n                        valuePropName: 'checked',\r\n                        initialValue: true,\r\n                    })(<Checkbox>Remember me</Checkbox>)}\r\n                    <a className=\"login-form-forgot\" href=\"\">\r\n                        Forgot password\r\n          </a>\r\n                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                        Log in\r\n          </Button>\r\n                    Or <a href=\"\">register now!</a>\r\n                </Form.Item>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nconst WrappedNormalLoginForm = Form.create({ name: 'normal_login' })(NormalLoginForm);\r\nexport default NormalLoginForm;\r\n// ReactDOM.render(<WrappedNormalLoginForm />, mountNode);\r\n// #components - form - demo - normal - login.login - form {\r\n//     max - width: 300px;\r\n// }\r\n// #components - form - demo - normal - login.login - form - forgot {\r\n//     float: right;\r\n// }\r\n// #components - form - demo - normal - login.login - form - button {\r\n//     width: 100 %;\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import \"antd/dist/antd.css\";\r\n// import React from 'react'\r\n// import { Form, Icon, Input, Button } from 'antd';\r\n// import student from './student'\r\n// import { Link } from 'next/link'\r\n// import Router from 'next/router'\r\n\r\n\r\n\r\n\r\n// class App extends React.Component {\r\n//     state = {\r\n//         userInput: \"\",\r\n//         password: \"\",\r\n//         errorUserInput: \"\",\r\n//         errorPassword: \"\"\r\n//     }\r\n\r\n//     onButtonPress = (e) => {\r\n//         e.preventDefault();\r\n//         if (this.state.userInput === this.state.password) {\r\n//             console.log(\"you are no next page\")\r\n//         } else {\r\n//             console.log(\"wrong\")\r\n//         }\r\n\r\n\r\n//     }\r\n//     onVolid = () => {\r\n//         if (!this.state.userInput.includes(\"@\")) {\r\n//             this.setState({ errorUserInput: \"Involid user name\" })\r\n//         } else {\r\n//             console.log(\"form invoid\")\r\n//         }\r\n//     }\r\n\r\n\r\n//     render() {\r\n//         return (<div>\r\n//             <Form onSubmit={this.onValid}>\r\n//                 <Input\r\n//                     prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n//                     placeholder=\"Username\"\r\n//                     type=\"email\"\r\n//                     value={this.state.userInput}\r\n//                     required\r\n//                     onChange={(e) => { this.setState({ userInput: e.target.value }) }}\r\n//                 />\r\n\r\n//                 <p>{this.state.errorUserInput}</p>\r\n//                 <Input\r\n//                     prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n//                     type=\"password\"\r\n//                     placeholder=\"Password\"\r\n//                     value={this.state.password}\r\n//                     onChange={(e) => { this.setState({ password: e.target.value }) }}\r\n//                     required\r\n\r\n//                 />\r\n//                 <center>\r\n//                     <Button type=\"primary\" htmlType=\"submit\" onClick={this.onButtonPress} type=\"submit\">\r\n//                         Log in\r\n//           </Button>\r\n//                 </center>\r\n//             </Form>\r\n\r\n\r\n//         </div >\r\n//         )\r\n//     }\r\n// }\r\n// export default App;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AADA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AADA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAlDA;AACA;AAoDA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}