{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\ReactJS\\\\reactproject\\\\next_assingment\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Form, Icon, Input, Button, Checkbox } from 'antd';\n\nclass NormalLoginForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"handleSubmit\", e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          console.log('Received values of form: ', values);\n        }\n      });\n    });\n  }\n\n  render() {\n    const {\n      getFieldDecorator\n    } = this.props.form;\n    return __jsx(Form, {\n      onSubmit: this.handleSubmit,\n      className: \"login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, __jsx(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, getFieldDecorator('username', {\n      rules: [{\n        required: true,\n        message: 'Please input your username!'\n      }]\n    })(__jsx(Input, {\n      prefix: __jsx(Icon, {\n        type: \"user\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }),\n      placeholder: \"Username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }))), __jsx(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, getFieldDecorator('password', {\n      rules: [{\n        required: true,\n        message: 'Please input your Password!'\n      }]\n    })(__jsx(Input, {\n      prefix: __jsx(Icon, {\n        type: \"lock\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }),\n      type: \"password\",\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }))), __jsx(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, getFieldDecorator('remember', {\n      valuePropName: 'checked',\n      initialValue: true\n    })(__jsx(Checkbox, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Remember me\")), __jsx(\"a\", {\n      className: \"login-form-forgot\",\n      href: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Forgot password\"), __jsx(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      className: \"login-form-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Log in\"), \"Or \", __jsx(\"a\", {\n      href: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"register now!\")));\n  }\n\n}\n\nconst WrappedNormalLoginForm = Form.create({\n  name: 'normal_login'\n})(NormalLoginForm); // ReactDOM.render(<WrappedNormalLoginForm />, mountNode);\n// #components - form - demo - normal - login.login - form {\n//     max - width: 300px;\n// }\n// #components - form - demo - normal - login.login - form - forgot {\n//     float: right;\n// }\n// #components - form - demo - normal - login.login - form - button {\n//     width: 100 %;\n// }\n// import \"antd/dist/antd.css\";\n// import React from 'react'\n// import { Form, Icon, Input, Button } from 'antd';\n// import student from './student'\n// import { Link } from 'next/link'\n// import Router from 'next/router'\n// class App extends React.Component {\n//     state = {\n//         userInput: \"\",\n//         password: \"\",\n//         errorUserInput: \"\",\n//         errorPassword: \"\"\n//     }\n//     onButtonPress = (e) => {\n//         e.preventDefault();\n//         if (this.state.userInput === this.state.password) {\n//             console.log(\"you are no next page\")\n//         } else {\n//             console.log(\"wrong\")\n//         }\n//     }\n//     onVolid = () => {\n//         if (!this.state.userInput.includes(\"@\")) {\n//             this.setState({ errorUserInput: \"Involid user name\" })\n//         } else {\n//             console.log(\"form invoid\")\n//         }\n//     }\n//     render() {\n//         return (<div>\n//             <Form onSubmit={this.onValid}>\n//                 <Input\n//                     prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n//                     placeholder=\"Username\"\n//                     type=\"email\"\n//                     value={this.state.userInput}\n//                     required\n//                     onChange={(e) => { this.setState({ userInput: e.target.value }) }}\n//                 />\n//                 <p>{this.state.errorUserInput}</p>\n//                 <Input\n//                     prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n//                     type=\"password\"\n//                     placeholder=\"Password\"\n//                     value={this.state.password}\n//                     onChange={(e) => { this.setState({ password: e.target.value }) }}\n//                     required\n//                 />\n//                 <center>\n//                     <Button type=\"primary\" htmlType=\"submit\" onClick={this.onButtonPress} type=\"submit\">\n//                         Log in\n//           </Button>\n//                 </center>\n//             </Form>\n//         </div >\n//         )\n//     }\n// }\n// export default App;","map":{"version":3,"sources":["C:/ReactJS/reactproject/next_assingment/pages/index.js"],"names":["Form","Icon","Input","Button","Checkbox","NormalLoginForm","React","Component","e","preventDefault","props","form","validateFields","err","values","console","log","render","getFieldDecorator","handleSubmit","rules","required","message","color","valuePropName","initialValue","WrappedNormalLoginForm","create","name"],"mappings":"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","sourcesContent":["\r\nimport { Form, Icon, Input, Button, Checkbox } from 'antd';\r\n\r\nclass NormalLoginForm extends React.Component {\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                console.log('Received values of form: ', values);\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n                <Form.Item>\r\n                    {getFieldDecorator('username', {\r\n                        rules: [{ required: true, message: 'Please input your username!' }],\r\n                    })(\r\n                        <Input\r\n                            prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                            placeholder=\"Username\"\r\n                        />,\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    {getFieldDecorator('password', {\r\n                        rules: [{ required: true, message: 'Please input your Password!' }],\r\n                    })(\r\n                        <Input\r\n                            prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                        />,\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    {getFieldDecorator('remember', {\r\n                        valuePropName: 'checked',\r\n                        initialValue: true,\r\n                    })(<Checkbox>Remember me</Checkbox>)}\r\n                    <a className=\"login-form-forgot\" href=\"\">\r\n                        Forgot password\r\n          </a>\r\n                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                        Log in\r\n          </Button>\r\n                    Or <a href=\"\">register now!</a>\r\n                </Form.Item>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nconst WrappedNormalLoginForm = Form.create({ name: 'normal_login' })(NormalLoginForm);\r\n\r\n// ReactDOM.render(<WrappedNormalLoginForm />, mountNode);\r\n// #components - form - demo - normal - login.login - form {\r\n//     max - width: 300px;\r\n// }\r\n// #components - form - demo - normal - login.login - form - forgot {\r\n//     float: right;\r\n// }\r\n// #components - form - demo - normal - login.login - form - button {\r\n//     width: 100 %;\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import \"antd/dist/antd.css\";\r\n// import React from 'react'\r\n// import { Form, Icon, Input, Button } from 'antd';\r\n// import student from './student'\r\n// import { Link } from 'next/link'\r\n// import Router from 'next/router'\r\n\r\n\r\n\r\n\r\n// class App extends React.Component {\r\n//     state = {\r\n//         userInput: \"\",\r\n//         password: \"\",\r\n//         errorUserInput: \"\",\r\n//         errorPassword: \"\"\r\n//     }\r\n\r\n//     onButtonPress = (e) => {\r\n//         e.preventDefault();\r\n//         if (this.state.userInput === this.state.password) {\r\n//             console.log(\"you are no next page\")\r\n//         } else {\r\n//             console.log(\"wrong\")\r\n//         }\r\n\r\n\r\n//     }\r\n//     onVolid = () => {\r\n//         if (!this.state.userInput.includes(\"@\")) {\r\n//             this.setState({ errorUserInput: \"Involid user name\" })\r\n//         } else {\r\n//             console.log(\"form invoid\")\r\n//         }\r\n//     }\r\n\r\n\r\n//     render() {\r\n//         return (<div>\r\n//             <Form onSubmit={this.onValid}>\r\n//                 <Input\r\n//                     prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n//                     placeholder=\"Username\"\r\n//                     type=\"email\"\r\n//                     value={this.state.userInput}\r\n//                     required\r\n//                     onChange={(e) => { this.setState({ userInput: e.target.value }) }}\r\n//                 />\r\n\r\n//                 <p>{this.state.errorUserInput}</p>\r\n//                 <Input\r\n//                     prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n//                     type=\"password\"\r\n//                     placeholder=\"Password\"\r\n//                     value={this.state.password}\r\n//                     onChange={(e) => { this.setState({ password: e.target.value }) }}\r\n//                     required\r\n\r\n//                 />\r\n//                 <center>\r\n//                     <Button type=\"primary\" htmlType=\"submit\" onClick={this.onButtonPress} type=\"submit\">\r\n//                         Log in\r\n//           </Button>\r\n//                 </center>\r\n//             </Form>\r\n\r\n\r\n//         </div >\r\n//         )\r\n//     }\r\n// }\r\n// export default App;"]},"metadata":{},"sourceType":"module"}